language = "C"
autogen_warning = "/* This file is autogenerated by cbindgen. Don't modify this manually. */"
cpp_compat = true
braces = "SameLine"
line_length = 80
tab_width = 4
documentation_style = "c"
style = "tag"
#swift_enum_macro = "CF_ENUM"
include_guard = "dash_shared_core_h"

[parse]
parse_deps = true
#expand = ["dash-spv-masternode-processor", ]
include = [
    "ferment",
    "dash-spv-masternode-processor",
    "dash-spv-platform",
    "dash-sdk",
    "platform-value",
    "platform-version",
#    "dpp",
    "drive-proof-verifier",
    "rs-dapi-client",
    "rs-merk-verify-c-binding"
]
extra_bindings = [
    "ferment",
    "dash-spv-masternode-processor",
    "dash-spv-platform",
    "dash-sdk",
    "platform-value",
    "platform-version",
    "dpp",
    "drive-proof-verifier",
    "rs-dapi-client",
    "rs-merk-verify-c-binding"
]

[enum]
prefix_with_name = true

[defines]
"test" = "false"
#"feature = cbor" = "platform-value/cbor", "dpp/cbor", "dpp/ciborium"
"feature = core-types" = "dpp/core-types"
"feature = data-contract-cbor-conversion" = "dpp/data-contract-cbor-conversion"
"feature = data-contract-json-conversion" = "dpp/data-contract-json-conversion"
"feature = data-contract-value-conversion" = "dpp/data-contract-value-conversion"
"feature = document-cbor-conversion" = "dpp/document-cbor-conversion"
"feature = document-json-conversion" = "dpp/document-json-conversion"
"feature = document-value-conversion" = "dpp/document-value-conversion"
"feature = extended-document" = "dpp/extended-document"
"feature = factories" = "dpp/factories"
"feature = fee-distribution" = "dpp/fee-distribution"
"feature = fixtures-and-mocks" = "dpp/fixtures-and-mocks"
"feature = identity-cbor-conversion" = "dpp/identity-cbor-conversion"
"feature = identity-json-conversion" = "dpp/identity-json-conversion"
"feature = identity-value-conversion" = "dpp/identity-value-conversion"
"feature = json" = "platform-value/serde_json"
"feature = json-object" = "dpp/json-object"
"feature = json-schema-validation" = "dpp/json-schema-validation"
"feature = message-signing" = "dpp/message-signing"
"feature = mocks" = "dash-sdk/mocks"
"feature = mock-versions" = "platform-version/mock-versions"
"feature = platform-value" = "dpp/platform-value"
"feature = state-transitions" = "false"
"feature = state-transition-json-conversion" = "dpp/state-transition-json-conversion"
"feature = state-transition-validation" = "dpp/state-transition-validation"
"feature = state-transition-signing" = "false"
"feature = std" = "platform-value/std"
"feature = system_contracts" = "dpp/system_contracts"
"feature = validation" = "dpp/validation"

#rename_variants = "None"
## must_use = "MUST_USE_ENUM"
#add_sentinel = false
#derive_helper_methods = false
#derive_const_casts = false
#derive_mut_casts = false
## cast_assert_name = "ASSERT"
#derive_tagged_enum_destructor = false
#derive_tagged_enum_copy_constructor = false
#enum_class = true
#private_default_tagged_enum_constructor = false


#// Here we write down crate names (!) where we want to retrieve C-bindings
#let includes = vec![
#"dash-spv-masternode-processor".to_string(),
#"rs-merk-verify-c-binding".to_string()
#];
#let config = cbindgen::Config {
#language: cbindgen::Language::C,
#parse: cbindgen::ParseConfig {
#parse_deps: true,
#include: Some(includes.clone()),
#extra_bindings: includes.clone(),
#expand: cbindgen::ParseExpandConfig {
#crates: includes.clone(),
#..Default::default()
#},
#..Default::default()
#},
#enumeration: cbindgen::EnumConfig {
#prefix_with_name: true,
#..Default::default()
#},
#braces: cbindgen::Braces::SameLine,
#line_length: 80,
#tab_width: 4,
#documentation_style: cbindgen::DocumentationStyle::C,
#include_guard: Some("dash_shared_core_h".to_string()),
#..Default::default()
#};
#cbindgen::generate_with_config(&crate_dir, config)
#.unwrap()
#.write_to_file("../target/dash_shared_core.h");
