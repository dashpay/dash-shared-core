language = "C"
autogen_warning = "/* This file is autogenerated by cbindgen. Don't modify this manually. */"
#cpp_compat = true
braces = "SameLine"
line_length = 80
tab_width = 4
documentation_style = "c"
#style = "tag"
#swift_enum_macro = "CF_ENUM"
include_guard = "dash_spv_apple_bindings_h"
#trailer = "typedef struct Runtime Runtime;"
[parse]
parse_deps = true
#expand = ["dash-spv-masternode-processor", ]
include = [
    "ferment",
    "dash-spv-coinjoin",
    "dash-spv-crypto",
    "dash-spv-keychain",
    "dash-spv-masternode-processor",
    "dash-spv-platform",
    "dash-sdk",
    "data-contracts",
    "platform-value",
    "platform-version",
    # TODO: cbindgen fails with this crate for some reason so it doesn't expose opaque types
#    "dpp",
    "drive-proof-verifier",
    "rs-dapi-client",
    "rs-merk-verify-c-binding",
    "dashcore",
    "dashcore_hashes",
    "tokio",
    "versioned-feature-core"
]
extra_bindings = [
    "ferment",
    "dash-spv-coinjoin",
    "dash-spv-crypto",
    "dash-spv-keychain",
    "dash-spv-masternode-processor",
    "dash-spv-platform",
    "dash-sdk",
    "data-contracts",
    "platform-value",
    "platform-version",
    "dpp",
    "drive-proof-verifier",
    "rs-dapi-client",
    "rs-merk-verify-c-binding",
    "dashcore",
    "dashcore_hashes",
    "tokio",
    "versioned-feature-core"
]

[enum]
prefix_with_name = true

[defines]
"test" = "TEST"
"feature = bls-signatures" = "DPP_BLS_SIGNATURES"
"feature = cbor" = "CBOR_AND_CBORIUM"
"feature = core-types" = "DS_CORE_TYPES"
"feature = data-contract-cbor-conversion" = "DPP_DATA_CONTRACT_CBOR_CONVERSION"
"feature = data-contract-json-conversion" = "DPP_DATA_CONTRACT_JSON_CONVERSION"
"feature = data-contract-value-conversion" = "DPP_DATA_CONTRACT_VALUE_CONVERSION"
"feature = document-cbor-conversion" = "DPP_DOCUMENT_CBOR_CONVERSION"
"feature = document-json-conversion" = "DPP_DOCUMENT_JSON_CONVERSION"
"feature = document-value-conversion" = "DPP_DOCUMENT_VALUE_CONVERSION"
"feature = extended-document" = "DPP_EXTENDED_DOCUMENT"
"feature = factories" = "DPP_FACTORIES"
"feature = fee-distribution" = "DPP_FEE_DISTRIBUTION"
"feature = fixtures-and-mocks" = "DPP_FIXTURES_AND_MOCKS"
"feature = identity-cbor-conversion" = "DPP_IDENTITY_CBOR_CONVERSION"
"feature = identity-json-conversion" = "DPP_IDENTITY_JSON_CONVERSION"
"feature = identity-value-conversion" = "DPP_IDENTITY_VALUE_CONVERSION"
"feature = json" = "PLATFORM_VALUE_SERDE_JSON"
"feature = json-object" = "DPP_JSON_OBJECT"
"feature = json-schema-validation" = "DPP_JSON_SCHEMA_VALIDATION"
"feature = message_verification" = "DASHCORE_MESSAGE_VERIFICATION"
"feature = message-signing" = "DPP_MESSAGE_SIGNING"
"feature = mocks" = "DASH_SDK_MOCKS"
"feature = mock-versions" = "PLATFORM_VERSION_MOCK_VERSIONS"
"feature = platform-value" = "DPP_PLATFORM_VALUE"
"feature = state-transitions" = "DPP_STATE_TRANSITIONS"
"feature = state-transition-json-conversion" = "DPP_STATE_TRANSITION_JSON_CONVERSION"
"feature = state-transition-validation" = "DPP_STATE_TRANSITION_VALIDATION"
"feature = state-transition-signing" = "DPP_STATE_TRANSITION_SIGNING"
"feature = std" = "PLATFORM_VALUE_STD"
"feature = system_contracts" = "DPP_SYSTEM_CONTRACTS"
"feature = validation" = "DPP_VALIDATION"

#rename_variants = "None"
## must_use = "MUST_USE_ENUM"
#add_sentinel = false
#derive_helper_methods = false
#derive_const_casts = false
#derive_mut_casts = false
## cast_assert_name = "ASSERT"
#derive_tagged_enum_destructor = false
#derive_tagged_enum_copy_constructor = false
#enum_class = true
#private_default_tagged_enum_constructor = false


#// Here we write down crate names (!) where we want to retrieve C-bindings
#let includes = vec![
#"dash-spv-masternode-processor".to_string(),
#"rs-merk-verify-c-binding".to_string()
#];
#let config = cbindgen::Config {
#language: cbindgen::Language::C,
#parse: cbindgen::ParseConfig {
#parse_deps: true,
#include: Some(includes.clone()),
#extra_bindings: includes.clone(),
#expand: cbindgen::ParseExpandConfig {
#crates: includes.clone(),
#..Default::default()
#},
#..Default::default()
#},
#enumeration: cbindgen::EnumConfig {
#prefix_with_name: true,
#..Default::default()
#},
#braces: cbindgen::Braces::SameLine,
#line_length: 80,
#tab_width: 4,
#documentation_style: cbindgen::DocumentationStyle::C,
#include_guard: Some("dash_shared_core_h".to_string()),
#..Default::default()
#};
#cbindgen::generate_with_config(&crate_dir, config)
#.unwrap()
#.write_to_file("../target/dash_shared_core.h");
